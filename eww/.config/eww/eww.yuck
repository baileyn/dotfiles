(defwidget sep []
  (box :vexpand false
       :hexpand false
    (label :class "separator"
           :text "|")))

;; Volume Widget
(defwidget volume []
  (eventbox :onhover "eww open audio_ctl"
            :onhoverlost "eww close audio_ctl"
    (box :class "volume"
         :spacing "4"
      (button :class "volume-button"
              :onclick "pulsemixer --toggle-mute"
              :orientation "h"
              :tooltip "${volume.defaults.sink.volumes[0]}%"
        (image :path "${volume.icon}"
               :image-width 25
               :image-height 25)))))

(defpoll volume :interval '1s'
  `scripts/audio`)

;; Clock Widget
(defwidget time []
	(box	:orientation "v" 
			:class "time" 
			:valign "end"
	(button	:onclick "scripts/popup calendar"	
			:class "time-hour" hour)
	(button	:onclick "scripts/popup calendar"	
			:class "time-min"  min)))
(defpoll hour	:interval "1s"	"date '+%H'")
(defpoll min	:interval "1s"	"date '+%M'")

;; Calendar Widget
(defwidget cal []
	(box :class "cal-box" 
		 :orientation "v"
	(box :class "cal-inner-box"
	(calendar :class "cal" 
			  :day calendar_day 
			  :month calendar_month 
			  :year calendar_year))))

(defpoll calendar_day :interval "10h"
    "date '+%d'")
(defpoll calendar_month :interval "10h"
    "scripts/calendar")
(defpoll calendar_year :interval "10h"
    "date '+%Y'")

(defwidget left [] 
  (box :class "left"
       :halign "start"
       :orientation "h"
    "Left"))

(defwidget center [] 
  (box :class "center"
       :halign "center"
       :orientation "h"
    "Center"))

(defwidget right [] 
  (box :class "right"
       :halign "end"
       :orientation "h"
    (volume)
    (sep)
    (time)))

(defwidget bar_widget []
  (box :class "status-bar"
       :orientation "h"
    (left)
    (center)
    (right)))

(defwindow status_bar
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "5px"
                               :width "98%"
                               :height "40px"
                               :anchor "top center")
           :stacking "fg"
           :windowtype "dock"
           :wm-ignore false
  (bar_widget))

(defwidget audio []
  (box :orientation "v"
    (for entry in {volume.sources}
      (button :class {entry.default ? "default-source" : "source"}
              :onclick "notify-send 'click' '${entry}'"
              :halign "start"
        "${entry.default ? "* " : ""}${entry.name}"))))

(defwindow audio_ctl
	:geometry (geometry :x "-20px" 
						:y "7%" 
                        :anchor "top right"
						:width "280px" 
						:height "60px")
  (audio))

(defwindow calendar
	:geometry (geometry :x "-1%" 
						:y "60px" 
                        :anchor "top right"
						:width "270px" 
						:height "60px")
(cal))
